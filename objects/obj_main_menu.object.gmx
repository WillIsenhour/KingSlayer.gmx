<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set menu selections and variables

//menu flag
curr_menu = "main";

//Main menu selections
main_menu[0] = "Start";
main_menu[1] = "Load";
main_menu[2] = "Options";
main_menu[3] = "Exit";

//Load menu selections
load_menu[0] = "Load File 1";
load_menu[1] = "Load File 2";
load_menu[2] = "Load File 3";
load_menu[3] = "Back";

//Options menu selections
if (window_get_fullscreen())
{
    options_menu[0] = "Switch to windowed mode";
}
else
{
    options_menu[0] = "Switch to fullscreen mode";
}
options_menu[1] = "Back";

//vertical space between menu items
space = 64;
//menu position variable (corresponds to menu selections array)
mpos = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Center window
window_center();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move cursor and check for selection

//check if user has selected a menu option
var push;   
push = keyboard_check_released(vk_enter);

switch (curr_menu)
{
    //Main menu
    case "main":
    {
        mpos = scr_step_menu(main_menu, mpos);
        if (push == 1) scr_main_menu();
        break;
    }
    //Load menu
    case "load":
    {
        mpos = scr_step_menu(load_menu, mpos);
        if (push == 1) scr_load_menu();
        break;
    }
    //Options menu
    case "options":
    {
        mpos = scr_step_menu(options_menu, mpos);
        if (push == 1) scr_options_menu();
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw menu with updated cursor position

var width = surface_get_width(application_surface);
var height = surface_get_height(application_surface);

draw_set_color(c_green);
draw_rectangle(0, 0, width, height, 0);

switch (curr_menu)
{
    //Main menu
    case "main":
    {
        draw_set_halign(fa_center);
        draw_set_color(c_white);
        draw_text(width/2, height/6, "King Slayer");
        
        scr_draw_menu(main_menu, mpos, space);
        break;
    }
    //Load menu
    case "load":
    {
        scr_draw_menu(load_menu, mpos, space);
        break;
    }
    //Options menu
    case "options":
    {
        scr_draw_menu(options_menu, mpos, space);
        break;
    }
}   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
