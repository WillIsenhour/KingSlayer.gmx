<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set menu selections and variables

//pause and menu flags
pause = 0;
curr_menu = "pause";

//pause menu selections
pause_menu[0] = "Resume";
pause_menu[1] = "Exit to Main Menu";
pause_menu[2] = "Exit Game";
pause_menu[3] = "Save (Dev Only)";

//save menu selections
//save menu selections
save_menu[0] = "Save File 1";
save_menu[1] = "Save File 2";
save_menu[2] = "Save File 3";
save_menu[3] = "Back";

//vertical space between menu items, in pixels
space = 64;
//menu position variable (corresponds to menu selections array)
mpos = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move cursor and check for selection

if (pause)
{
    //check if user has selected menu item
    var push;
    push = keyboard_check_released(vk_enter);
    
    switch (curr_menu)
    {
        //Save menu
        case "save":
        {
            mpos = scr_step_menu(save_menu, mpos);
            if (push == 1) scr_save_menu();
        }
        case "pause":
        {
            mpos = scr_step_menu(pause_menu, mpos);
            if (push == 1) scr_pause_menu();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause game

if (!pause) 
{  
    pause = 1;
    //pass true to pause all objects except obj_pause
    instance_deactivate_all(true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw menu (pause or save) with updated cursor

if (pause)
{
    var width = surface_get_width(application_surface);
    var height = surface_get_height(application_surface);

    draw_set_color(c_green);
    draw_rectangle(0,0,width, height, 0);
    
    switch (curr_menu){
        //Pause menu
        case "pause":
        {
            draw_set_halign(fa_center);
            draw_set_color(c_white);
            draw_text(width/2, height/6, "Game Paused");
            
            scr_draw_menu(pause_menu, mpos, space);
            break;
        }
        //Save menu
        case "save":
        {
            scr_draw_menu(save_menu, mpos, space);
            break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
